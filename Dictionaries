Introduction to Dictionaries 
#1
sensors =  {"living room": 21, "kitchen": 23, "bedroom": 20, "pantry": 22}

num_cameras = {"backyard": 6,  "garage": 2, "driveway": 1}

print(sensors)

#2
translations = {"mountain": "orod", "bread": "bass", "friend": "mellon", "horse": "roch"}

person = {"name": "Shuri", "age": 18, "family": ["T'Chaka", "Ramonda"]}

#3
children = {"von Trapp": ["Johannes", "Rosmarie", "Eleonore"], "Corleone": ["Sonny", "Fredo", "Michael"]}

#4
my_empty_dictionary ={}

#5
animals_in_zoo = {}

animals_in_zoo["zebras"] = 8

animals_in_zoo["monkeys"] = 12

animals_in_zoo["dinosaurs"] = 0

print(animals_in_zoo)

#6
user_ids = {"teraCoder": 9018293, "proProgrammer": 119238}

user_ids.update({"theLooper": 138475, "stringQueen": 85739})

print(user_ids)

#7
oscar_winners = {"Best Picture": "La La Land", "Best Actor": "Casey Affleck", "Best Actress": "Emma Stone", "Animated Feature": "Zootopia"}

oscar_winners["Supporting Actress"] = "Viola Davis"

oscar_winners["Best Picture"] = "Moonlight"

print(oscar_winners)

#8
drinks = ["espresso", "chai", "decaf", "drip"]
caffeine = [64, 40, 0, 120]

zipped_drinks = zip(drinks, caffeine)

drinks_to_caffeine = {key:value for key, value in zipped_drinks} # This is a List Comprehension!

print(drinks_to_caffeine)


#9
songs = ["Like a Rolling Stone", "Satisfaction", "Imagine", "What's Going On", "Respect", "Good Vibrations"]
playcounts = [78, 29, 44, 21, 89, 5]

plays = {key:value for key, value in zip(songs, playcounts)}

print(plays)

print("---------")

plays["Purple Haze"] = 1

plays["Respect"] = 94

library = {"The Best Songs": plays, "Sunday Feelings": {}}

print(library)

Using Dictionaries 
#1
No coding just reading 
#2
zodiac_elements = {"water": ["Cancer", "Scorpio", "Pisces"], "fire": ["Aries", "Leo", "Sagittarius"], "earth": ["Taurus", "Virgo", "Capricorn"], "air":["Gemini", "Libra", "Aquarius"]}

print(zodiac_elements["earth"])

print(zodiac_elements["fire"])


#3
zodiac_elements = {"water": ["Cancer", "Scorpio", "Pisces"], "fire": ["Aries", "Leo", "Sagittarius"], "earth": ["Taurus", "Virgo", "Capricorn"], "air":["Gemini", "Libra", "Aquarius"]}

zodiac_elements["energy"] = "Not a Zodiac element"

if "energy" in zodiac_elements:
  print(zodiac_elements["energy"])

#4
user_ids = {"teraCoder": 100019, "pythonGuy": 182921, "samTheJavaMaam": 123112, "lyleLoop": 102931, "keysmithKeith": 129384}

tc_id = user_ids.get("teraCoder", 100000)

print(tc_id)

stack_id = user_ids.get("superStackSmash", 100000)

print(stack_id)

#5
available_items = {"health potion": 10, "cake of the cure": 5, "green elixir": 20, "strength sandwich": 25, "stamina grains": 15, "power stew": 30}

health_points = 20

health_points += available_items.pop("stamina grains", 0)

health_points += available_items.pop("power stew", 0)

health_points += available_items.pop("mystic bread", 0)

print(available_items)

print(health_points)

# When using pop it removes the key and value from the list. If you want to add to health_points without removing from the list you can do the following

health_points += available_items["cake of the cure"]

print(health_points)

#6
user_ids = {"teraCoder": 100019, "pythonGuy": 182921, "samTheJavaMaam": 123112, "lyleLoop": 102931, "keysmithKeith": 129384}
num_exercises = {"functions": 10, "syntax": 13, "control flow": 15, "loops": 22, "lists": 19, "classes": 18, "dictionaries": 18}

users = user_ids.keys()

lessons = num_exercises.keys()

print(users)

# output: dict_keys(['teraCoder', 'pythonGuy', 'samTheJavaMaam', 'lyleLoop', 'keysmithKeith'])

print(list(lessons))

# output: ['functions', 'syntax', 'control flow', 'loops', 'lists', 'classes', 'dictionaries']

#7
num_exercises = {"functions": 10, "syntax": 13, "control flow": 15, "loops": 22, "lists": 19, "classes": 18, "dictionaries": 18}

total_exercises = 0

loop = list(num_exercises.values())

for number in loop:
  total_exercises += number

print(total_exercises)

#8
pct_women_in_occupation = {"CEO": 28, "Engineering Manager": 9, "Pharmacist": 58, "Physician": 40, "Lawyer": 37, "Aerospace Engineer": 9}

for job, number in pct_women_in_occupation.items():
  print("Women make up " + str(number) + " percent of " + job + "s")

#9
tarot = { 1:  "The Magician", 2:  "The High Priestess", 3:  "The Empress", 4: "The Emperor", 5: "The Hierophant", 6:  "The Lovers", 7:  "The Chariot", 8: "Strength", 9:  "The Hermit", 10: "Wheel of Fortune", 11: "Justice", 12:  "The Hanged Man", 13: "Death", 14:  "Temperance", 15: "The Devil", 16:  "The Tower", 17:  "The Star", 18: "The Moon", 19: "The Sun", 20:  "Judgement", 21:  "The World", 22: "The Fool"}

spread = {}

spread["past"] = tarot.pop(13)

spread["present"] = tarot.pop(22)

spread["future"] = tarot.pop(10)

# In python, you only pop() keys, not values in the key, value format that dictionaries take on. 

for time_frame, result in spread.items():
  print(f"Your {time_frame} is the {result} card.")

Project:
letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
points = [1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 4, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10]

letter_to_points = {letter: point for letter, point in zip(letters, points)}

letter_to_points[" "] = 0

#print(letter_to_points)

def score_word(word):
  point_total = 0
  for letter_in_word in word:
      point_total += letter_to_points.get(letter_in_word.upper(), 0)
  return point_total

#print(score_word("brownie"))

player_to_words = {}

player_to_words["player1"] = ["BLUE", "TENNIS", "EXIT"]

player_to_words["wordNerd"] = ["EARTH", "EYES", "MACHINE"]

player_to_words["Lexi Con"] = ["ERASER", "BELLY", "HUSKY"]

player_to_words["Prof Reader"] = ["ZAP", "COMA", "PERIOD"]

player_to_points = {}

def play_word(player, word):
  if player in player_to_words:
    player_to_words[player].append(word)
  else:
    #if player doesn't exist yet
    player_to_words[player] = [word]

play_word("kieran", "amazon")

for player, words in player_to_words.items():
    total_points = 0
    for word in words:
        print(f"{player} played: {word}")
        total_points += score_word(word)
    player_to_points[player] = total_points

print("\nFinal Scores:")
for player, score in player_to_points.items():
    print(f"{player}: {score}")
